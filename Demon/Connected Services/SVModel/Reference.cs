//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Demon.SVModel {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SVModel.IModelo")]
    public interface IModelo {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelo/Reset", ReplyAction="http://tempuri.org/IModelo/ResetResponse")]
        void Reset(string IdModPozo, int MaxIntentos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelo/Reset", ReplyAction="http://tempuri.org/IModelo/ResetResponse")]
        System.Threading.Tasks.Task ResetAsync(string IdModPozo, int MaxIntentos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelo/Delete", ReplyAction="http://tempuri.org/IModelo/DeleteResponse")]
        void Delete(string IdModPozo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelo/Delete", ReplyAction="http://tempuri.org/IModelo/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string IdModPozo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelo/Execute", ReplyAction="http://tempuri.org/IModelo/ExecuteResponse")]
        bool Execute(string IdModPozo, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelo/Execute", ReplyAction="http://tempuri.org/IModelo/ExecuteResponse")]
        System.Threading.Tasks.Task<bool> ExecuteAsync(string IdModPozo, string User);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModeloChannel : Demon.SVModel.IModelo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModeloClient : System.ServiceModel.ClientBase<Demon.SVModel.IModelo>, Demon.SVModel.IModelo {
        
        public ModeloClient() {
        }
        
        public ModeloClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModeloClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModeloClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModeloClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Reset(string IdModPozo, int MaxIntentos) {
            base.Channel.Reset(IdModPozo, MaxIntentos);
        }
        
        public System.Threading.Tasks.Task ResetAsync(string IdModPozo, int MaxIntentos) {
            return base.Channel.ResetAsync(IdModPozo, MaxIntentos);
        }
        
        public void Delete(string IdModPozo) {
            base.Channel.Delete(IdModPozo);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string IdModPozo) {
            return base.Channel.DeleteAsync(IdModPozo);
        }
        
        public bool Execute(string IdModPozo, string User) {
            return base.Channel.Execute(IdModPozo, User);
        }
        
        public System.Threading.Tasks.Task<bool> ExecuteAsync(string IdModPozo, string User) {
            return base.Channel.ExecuteAsync(IdModPozo, User);
        }
    }
}
